version: '3'

x-db-img: &db-img
  image: postgres:16-alpine

x-search-img: &search-img
  image: kunansy/tracker_search:6.3.2

x-backup-img: &backup-img
  image: kunansy/fast-backup:0.5.5

x-cache-img: &cache-img
  image: eqalpha/keydb:arm64_v6.3.4

x-tracker-img: &tracker-img
  image: kunansy/reading_tracker:237

x-speech-recognizer-img: &speech-recognizer
  image: kunansy/tracker_speech_recognizer:2

services:
  tracker-db:
    <<: *db-img
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    volumes:
      - database-volume:/var/lib/postgresql/data
    container_name: tracker-db
    ports:
      - "127.0.0.1:${DB_PORT}:5432"
    networks:
       - tracker-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}", "-q", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-search:
    <<: *search-img
    container_name: tracker-search
    restart: always
    ports:
      - "127.0.0.1:9306:9306"
      - "127.0.0.1:9308:9308"
      - "127.0.0.1:9312:9312"
    volumes:
      - manticore-data:/var/lib/manticore/
    networks:
      - tracker-net
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    environment:
      - MCL=1
      - TELEMETRY=0
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-backup:
    <<: *backup-img
    restart: always
    container_name: tracker-backup
    env_file: .env
    entrypoint: ["/app/backup-server"]
    ports:
      - "127.0.0.1:${BACKUP_PORT}:50051"
    volumes:
      - ./data:/app/data:rw
    networks:
      - tracker-net
    healthcheck:
      test: exit 0
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-cache:
    <<: *cache-img
    container_name: tracker-cache
    restart: always
    env_file: .env
    command: >
      --requirepass ${CACHE_PASSWORD}
      --server-threads 4
    networks:
      - tracker-net
    ports:
      - "127.0.0.1:${CACHE_PORT}:6379"
    volumes:
      - cache-volume:/data
    healthcheck:
      test: ["CMD-SHELL", "keydb-cli ping || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-app:
    <<: *tracker-img
    container_name: tracker-app
    env_file: .env
    restart: always
    ports:
       - "127.0.0.1:${API_PORT}:8000"
    entrypoint: ["gunicorn", "tracker.main:app", "--bind", "0.0.0.0:8000", "--workers",
                 "${API_ASGI_WORKERS}", "--worker-class", "uvicorn.workers.UvicornWorker",
                 "--access-logfile", "-", "--error-logfile", "-", "--log-level", "${LOGGER_LEVEL}",
                 "--forwarded-allow-ips", "*"]
    networks:
      - tracker-net
    volumes:
      - ./data:/app/data:rw
      - ./metrics:/app/metrics:rw
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/readiness || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-speech-recognizer:
    <<: *speech-recognizer
    restart: always
    container_name: tracker-speech-recognizer
    ports:
      - "127.0.0.1:8080:8080"
    entrypoint: ["gunicorn", "speech_recognizer.main:app", "--bind", "0.0.0.0:8080", "--workers",
                 "${API_ASGI_WORKERS}", "--worker-class", "uvicorn.workers.UvicornWorker",
                 "--access-logfile", "-", "--error-logfile", "-", "--log-level", "${LOGGER_LEVEL}",
                 "--forwarded-allow-ips", "*"]
    networks:
      - tracker-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/readiness || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-debezium-parser:
    <<: *tracker-img
    container_name: tracker-debezium-parser
    env_file: .env
    restart: always
    entrypoint: ["python3", "kafka/debezium_parser.py"]
    networks:
      - tracker-net
    healthcheck:
      test: "exit 0"
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

  tracker-matview-refresher:
    <<: *tracker-img
    container_name: tracker-matview-refresher
    env_file: .env
    restart: always
    entrypoint: ["/srv/cronn", "-c", "59 * * * * python3 kafka/refresh_view.py"]
    networks:
      - tracker-net
    healthcheck:
      test: "exit 0"
    logging:
      driver: json-file
      options:
        max-size: "1m"
        max-file: "3"
        compress: "true"

volumes:
  database-volume:
  manticore-data:
  cache-volume:

networks:
  tracker-net:
    external: true
